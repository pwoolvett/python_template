[flake8]
max-line-length = {{ cookiecutter.max_line_length }}
[pep8]
max-line-length = {{ cookiecutter.max_line_length }}

[tox]
envlist =
  {% if cookiecutter.formatter != "none" -%}
    format
  {%- endif -%}
  {%- if cookiecutter.linter != "none" -%}
    , lint
  {%- endif -%}
  {%- if cookiecutter.testing != "none" -%}
    {%- if cookiecutter.formatter|lower != "none" -%}
      , formattest
    {%- endif -%}
    {%- if cookiecutter.linter|lower != "none" -%}
      , linttest
    {%- endif -%}
      , unit, integration
    {%- if "behave" in cookiecutter.testing -%}
      , behave
    {%- endif -%}
  {%- endif -%}
  {%- if "sphinx" in cookiecutter.docs|lower() -%}
    , docs
  {%- endif %}
skipsdist = True
skip_install = True

[testenv]
skip_install = true
whitelist_externals = poetry
                    {%- if "autopep8" in cookiecutter.formatter %}
                      autopep8
                    {%- endif %}
                    {%- if "black" in cookiecutter.formatter %}
                      black
                    {%- endif %}
                    {%- if "pep8" in cookiecutter.linter %}
                      pep8
                    {%- endif %}
                    {%- if "pylint" in cookiecutter.linter %}
                      pylint
                    {%- endif %}
                    {%- if "flake8" in cookiecutter.linter %}
                      flake8
                    {%- endif %}
                    {%- if "mypy" in cookiecutter.linter %}
                      mypy
                    {%- endif %}
                    {%- if "bandit" in cookiecutter.linter %}
                      bandit
                    {%- endif %}
envdir = {toxinidir}/.venv
basepython = python{{ cookiecutter.python_version }}


[testenv:venv]
recreate = False
description = "Install basic dependencies for working application, without running tests"
commands =
  poetry install -vvv

{% if cookiecutter.formatter != "none" -%}
[testenv:format]
description = "Reformat code using {{ cookiecutter.formatter }} formatter(s)"
commands =
  {% if "autopep8" in cookiecutter.formatter -%}
  autopep8 --in-place --recursive {{ cookiecutter.slug_name }}
  {% endif -%}
  {%- if "black" in cookiecutter.formatter -%}
  black --py36 {{ cookiecutter.slug_name }}
  {%- endif -%}
{%- endif %}

{% if cookiecutter.linter != "none" -%}
[testenv:lint]
description = "Lint code using {{ cookiecutter.linter }} linter(s)"
commands =
  {%- if "flake8" in cookiecutter.linter -%}
    flake8 --diff --show-source --statistics --count {{ cookiecutter.slug_name }}
  {%- endif -%}
  {%- if "pylint" in cookiecutter.linter -%}
    pylint {{ cookiecutter.slug_name }}
  {%- endif -%}
  {%- if "mypy" in cookiecutter.linter -%}
    mypy --python-version {{ cookiecutter.python_version }} -p {{ cookiecutter.slug_name }}
  {%- endif -%}
  {%- if "bandit" in cookiecutter.linter -%}
    bandit -r {{ cookiecutter.slug_name }}
  {%- endif -%}
{%- endif -%}


{%- if cookiecutter.testing|lower != "none" -%}

{%- if cookiecutter.formatter|lower != "none" -%}
[testenv:formattest]
description = "Reformat testing code using {{ cookiecutter.formatter }} formatter(s)"
commands =
  {%- if "autopep8" in cookiecutter.formatter -%}
    autopep8 --in-place --recursive {{ cookiecutter.slug_name }}
  {%- endif -%}
  {%- if "black" in cookiecutter.formatter -%}
    black --py36 {{ cookiecutter.slug_name }}
  {%- endif -%}
{%- endif -%}

{%- if cookiecutter.linter|lower != "none" -%}
[testenv:linttest]
description = "Lint test code using {{ cookiecutter.linter }} linter(s)"
commands =
  {%- if "flake8" in cookiecutter.linter -%}
    flake8 --diff --show-source --statistics --count tests
  {%- endif -%}
  {%- if "pylint" in cookiecutter.linter -%}
    pylint tests
  {%- endif -%}
  {%- if "mypy" in cookiecutter.linter -%}
    mypy --python-version {{ cookiecutter.python_version }} -p tests
  {%- endif -%}
  {%- if "bandit" in cookiecutter.linter -%}
    bandit -r tests
  {%- endif -%}
{%- endif -%}

[testenv:unit]
description = "Run unit tests"
commands =
  pytest {posargs} -v --tb=short -ra --cov={{ cookiecutter.slug_name }} tests/unit
  coverage xml -o coverage.unit.xml


[testenv:integration]
description = "Run integration tests"
commands =
{%- if "docker-compose" in cookiecutter.docker -%}
  docker-compose up -d
{%- endif -%}
  pytest {posargs} -v --tb=short -ra --cov={{ cookiecutter.slug_name }} tests/integration
  coverage xml -o coverage.integration.xml
{%- if "docker-compose" in cookiecutter.docker -%}
  docker-compose down
{%- endif -%}


{%- if "behave" in cookiecutter.testing -%}
[testenv:behave]
description = "Run behavioral tests"
commands =
{%- if "docker-compose" in cookiecutter.docker -%}
  docker-compose up -d
{%- endif -%}
  behave --show-timings tests/features
{%- if "docker-compose" in cookiecutter.docker -%}
  docker-compose down
{%- endif -%}
{%- endif -%}

{%- endif -%}

{%- if "sphinx" in cookiecutter.docs -%}
[testenv:docs]
description = "Invoke sphinx-build to build the HTML docs"
commands =
  sphinx-build \
  -d "{toxinidir}/docs/build/.doctrees" \
  "{toxinidir}/docs/source" \
  "{toxinidir}/docs/build" \
  --color \
  -E \
  -a \
;  -W \
  -bhtml
{%- endif -%}
